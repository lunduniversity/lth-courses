

Kursplan för
Objektorienterad modellering och design
Object-oriented Modelling and Design
EDAF25, 7,5 högskolepoäng, G2 (Grundnivå, fördjupad)
Gäller för: Läsåret 2018/19
Beslutad av: Programledning C/D
Beslutsdatum: 2018-04-03
Allmänna uppgifter
Obligatorisk för: IDA2
Undervisningsspråk: Kursen ges på svenska

Syfte
Kursen ger förmåga till hållbar utveckling av program som kan
återanvändas och modifieras med hänsyn till förändrade krav i
ett industriellt sammanhang. Den ger även en djupare inblick i
programmeringstekniker i form av algoritmer för grafhantering.

Mål
Kunskap och förståelse
För godkänd kurs skall studenten

kunna lokalisera och känna igen användning av gängse
designprinciper och designmönster i givna program. Detta och alla
övriga mål är relaterade till små program med några hundra
eller tusen rader.
känna till och kunna redogöra för hur grundläggande
algoritmer för grafhantering fungerar


Färdighet och förmåga
För godkänd kurs skall studenten

kunna utforma och implementera objektorienterade program med
många klasser och några paket,
kunna välja och implementera lämpliga designmönster i
typiska problem,
kunna använda en integrerad utvecklingsmiljö för design,
implementering och refaktorisering av program,
kunna beskriva programdesign med UML (Unified Modelling
Language).
kunna implementera och tillämpa grundläggande algoritmer för
grafhantering.


Värderingsförmåga och förhållningssätt
För godkänd kurs skall studenten

kunna utvärdera en programdesign med avseende på
designprinciper och välja lämpliga förbättringar i termer av
objektorienterade designtekniker och -mönster.,
kunna skriva program som är lätta att underhålla och
modifiera.


Kursinnehåll
Principer för utformning av objektorienterade program.
Designmönster och ramverk. Utvecklingsmiljö för objektorienterad
modellering, implementering och refaktorisering. Projekt med design
och implementering. Grafproblem och grafalgoritmer.

Kursens examination
Betygsskala: TH - (U,3,4,5) - (Underkänd, Tre, Fyra, Fem)
Prestationsbedömning: Kursen examineras genom skriftlig tentamen, laborationer samt två mindre projekt som utföres i grupp. 
Om så krävs för att en student med varaktig funktionsnedsättning ska ges ett likvärdigt examinationsalternativ jämfört med en student utan funktionsnedsättning, så kan examinator efter samråd med universitetets avdelning för pedagogiskt stöd fatta beslut om alternativ examinationsform för berörd student.
Delmoment
Kod: 0117. Benämning: Projekt. 
Antal högskolepoäng: 2. Betygsskala: UG.  Prestationsbedömning: För godkänt betyg krävs fullgjorda projekt. 
Kod: 0217. Benämning: Tentamen . 
Antal högskolepoäng: 3,5. Betygsskala: TH.  Prestationsbedömning: Skriftlig tentamen. Slutbetyg på kursen baseras på resultatet av den skriftliga tentamen och kan även påverkas positivt av aktivitet under övningarna. 
Kod: 0317. Benämning: Laborationer. 
Antal högskolepoäng: 2. Betygsskala: UG.  Prestationsbedömning: För godkänt betyg krävs fullgjorda laborationer. 
Antagningsuppgifter
Förkunskapskrav:
Obligatoriska moment från kursen EDA690 Algoritmer och datastrukturer eller EDAA30 Programmering i Java, fortsättningskurs.



Begränsat antal platser: Nej
Kursen överlappar följande kurser: EDA060, EDA065, EDA666, EDAF10, EDA061, EDAF60
Kurslitteratur

Martin, R C: Agile Software Development - Principles, Patterns, and Practices. PEARSON EDUCATION, 2013, ISBN: 9781292025940.
Lennart Andersson: UML-syntax. Datavetenskap LTH, 2010.
Koffman E.B., Wolfgang P. : Data Structures, Abstractions and Design Using Java. 2 Ed. Wiley, 2010, ISBN: 978-0-470-12870-1.


Kontaktinfo och övrigt
Studierektor: Studierektor, Studierektor-tekn@cs.lth.se
Kursansvarig: Emelie Engström, emelie.engstrom@cs.lth.se
Hemsida: http://cs.lth.se/edaf25



